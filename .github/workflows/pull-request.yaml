name: Pull request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - master
      - releases/*

env:
  QUAY_ORG: quay.io/openshift-assisted
  QUAY_REPO: assisted-installer-ui-repo
  IMAGE_TAG: ${{ github.actor }}-${{ github.run_id }}

jobs:
  setup:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.push.outputs.registry-path }}
    steps:
      - uses: actions/checkout@v3
      - name: Build
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.QUAY_REPO }}
          tags: ${{ env.IMAGE_TAG }}
          labels: quay.expires-after=${{ vars.QUAY_TAG_EXPIRATION }}
          build-args: |
            AIUI_APP_GIT_SHA=${{ github.event.pull_request.head.sha }}
            AIUI_APP_VERSION=latest+sha.${{ github.event.pull_request.head.sha }}
          containerfiles: podman/repo.Containerfile
          context: .
      - name: Push to Quay.io
        id: push
        uses: redhat-actions/push-to-registry@v2.7
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ${{ env.QUAY_ORG }}
          username: ${{ secrets.QUAY_OPENSHIFT_ASSISTED_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_OPENSHIFT_ASSISTED_ROBOT_PASSWORD }}
  checks:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    needs: setup
    container: ${{ needs.setup.outputs.image_name }}
    strategy:
      matrix:
        script:
          - name: Lint
            cmd: 'yarn lint:all'
          - name: Format
            cmd: 'yarn format:all'
          - name: Circular deps
            cmd: 'yarn check_circular_deps:all'
          - name: Translation files
            cmd: 'yarn workspace @openshift-assisted/locales run validate_translation_files'
          - name: Test
            cmd: 'yarn test:all'
    steps:
      - name: ${{ matrix.script.name }}
        run: |
          cd /opt/app-root/src/
          ${{ matrix.script.cmd }}
