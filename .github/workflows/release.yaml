name: Publish a new version to NPM
on:
  release:
    types:
      - published
env:
  NODE_OPTIONS: --max-old-space-size=8192
jobs:
  build_and_release:
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configuring git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      # expected format of the new git tag: v1.2.3
      - name: Parsing the next package version
        run: echo "pkg_version=$(echo ${{ github.ref_name }} | sed -e 's/^v//g')" >> $GITHUB_ENV

      - name: Checking out the target branch
        run: git checkout ${{ github.event.release.target_commitish }}

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: '12'
          registry-url: 'https://registry.npmjs.org'

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      # In order to align the new tag with the commit that bumps the version in the package.json
      # we must first push the tag (github.ref_name) and then update the remote branch.
      # Attempting to remove the tag first, invalidates the release and puts it on a draft state.
      - name: Updating the version in package.json
        run: |
          yarn version --new-version ${{ env.pkg_version }} --no-git-tag-version
          git add package.json
          git commit -m 'Version ${{ github.ref_name }}'
          git tag -f -a ${{ github.ref_name }} -m '${{ github.ref_name }}'
          git push origin ${{ github.ref_name }} --force

      - name: Pushing updated package.json to ${{ github.event.release.target_commitish }}
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}
          branch: ${{ github.event.release.target_commitish }}
          force: true
          unprotect_reviews: true

      - name: Building
        run: yarn build

      - name: Publishing
        run: yarn publish --no-git-tag-version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_PUBLISH_TOKEN }}
