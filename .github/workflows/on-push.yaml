name: Push to Quay.io

on:
  push:
    branches:
      - master
      - features/*

jobs:
  push-to-quay-io:
    if: ${{ github.repository == 'openshift-assisted/assisted-ui-lib' }}
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max-old-space-size=8192
      GH_REPO_OWNER: openshift-assisted
      QUAY_IO_REGISTRY_OWNER: edge-infrastructure
    steps:
      - name: Checkout assisted-ui-lib
        uses: actions/checkout@v3
        with:
          path: ./assisted-ui-lib

      - name: Checkout assisted-ui
        # When pushing to a branch other than 'master', the same branch name must
        # be defined in assisted-ui for this step to succeed.
        uses: actions/checkout@v3
        with:
          repository: ${{ env.GH_REPO_OWNER }}/assisted-ui
          ref: ${{ github.ref_name }}
          path: ./assisted-ui

      - uses: actions/setup-node@v3
        with:
          node-version: '12'
          cache: yarn
          cache-dependency-path: |
            ./assisted-ui-lib/yarn.lock
            ./assisted-ui/yarn.lock

      - name: Define additional environment variables
        uses: actions/github-script@v6
        with:
          script: |
            const normalized_branch_name = "${{ github.ref_name }}".replaceAll('/','_').toLowerCase();
            core.exportVariable('REACT_APP_VERSION', normalized_branch_name);
            const short_sha = `${"${{ github.sha }}".slice(0,8)}`;
            core.exportVariable('REACT_APP_GIT_SHA', short_sha);
            const ui_lib_package_version = `0.0.0+sha.${short_sha}`;
            core.exportVariable('UI_LIB_PACKAGE_VERSION', ui_lib_package_version);
            core.exportVariable('UI_LIB_PACKAGE_NAME', `openshift-assisted-ui-lib-v${ui_lib_package_version}.tgz`)

      - name: Change the package version in assisted-ui-lib to ${{ env.UI_LIB_PACKAGE_VERSION }}
        working-directory: ./assisted-ui-lib
        run: |
          node scripts/edit-package-version.js ./package.json "$UI_LIB_PACKAGE_VERSION"

      - name: Install deps
        working-directory: ./assisted-ui-lib
        run: |
          yarn install --frozen-lockfile

      - name: Validate that i18n locale files are updated and contains 'ai' prefix in keys
        working-directory: ./assisted-ui-lib
        run: |
          chmod +x ./scripts/validatei18n_files.sh
          ./scripts/validatei18n_files.sh
        shell: bash

      - name: Build and pack
        working-directory: ./assisted-ui-lib
        run: |
          node scripts/esbuild/prod.js
          yarn pack -f $GITHUB_WORKSPACE/$UI_LIB_PACKAGE_NAME

      - name: Add generated openshift-assisted-ui-lib package to assisted-ui and build it
        working-directory: ./assisted-ui
        run: |
          mv $GITHUB_WORKSPACE/$UI_LIB_PACKAGE_NAME .
          yarn add file:./$UI_LIB_PACKAGE_NAME
          yarn build

      - name: Get container image tags
        # Appends the 'latest' tag only if the commit was pushed to 'master'
        id: get-tags
        uses: actions/github-script@v6
        with:
          script: |
            const tags = ['${{ env.REACT_APP_GIT_SHA }}', '${{ env.REACT_APP_VERSION }}'];
            if ('${{ github.ref_name }}' === 'master')
              core.setOutput('tags', tags.concat('latest', 'latest-${{ github.sha }}').join(' '));
            else
              core.setOutput('tags', tags.join(' '));

      - name: Build the assisted-ui image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: assisted-installer-ui
          tags: ${{ steps.get-tags.outputs.tags }}
          build-args: |
            REACT_APP_GIT_SHA=${{ env.REACT_APP_GIT_SHA }}
            REACT_APP_VERSION=${{ env.REACT_APP_VERSION }}
          containerfiles: ./assisted-ui/hacks/custom.Dockerfile
          context: ./assisted-ui

      - name: Push the assisted-ui image to Quay.io
        uses: redhat-actions/push-to-registry@v2.6
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: quay.io/${{ env.QUAY_IO_REGISTRY_OWNER }}
          username: ${{ secrets.QUAYIO_EDGE_INFRA_USERNAME }}
          password: ${{ secrets.QUAYIO_EDGE_INFRA_PASSWORD }}
