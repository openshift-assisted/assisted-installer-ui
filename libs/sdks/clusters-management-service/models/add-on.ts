/* tslint:disable */
/* eslint-disable */
/**
 * clusters_mgmt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { AddOnConfig } from './add-on-config';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnInstallMode } from './add-on-install-mode';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnNamespace } from './add-on-namespace';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnParameter } from './add-on-parameter';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnRequirement } from './add-on-requirement';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnSubOperator } from './add-on-sub-operator';
// May contain unused imports in some cases
// @ts-ignore
import { AddOnVersion } from './add-on-version';
// May contain unused imports in some cases
// @ts-ignore
import { CredentialRequest } from './credential-request';

/**
 * Representation of an add-on that can be installed in a cluster.
 * @export
 * @interface AddOn
 */
export interface AddOn {
    /**
     * Indicates the type of this object. Will be \'AddOn\' if this is a complete object or \'AddOnLink\' if it is just a link.
     * @type {string}
     * @memberof AddOn
     */
    'kind'?: string;
    /**
     * Unique identifier of the object.
     * @type {string}
     * @memberof AddOn
     */
    'id'?: string;
    /**
     * Self link.
     * @type {string}
     * @memberof AddOn
     */
    'href'?: string;
    /**
     * Common annotations to be applied to all resources created by this addon.
     * @type {{ [key: string]: string; }}
     * @memberof AddOn
     */
    'common_annotations'?: { [key: string]: string; };
    /**
     * Common labels to be applied to all resources created by this addon.
     * @type {{ [key: string]: string; }}
     * @memberof AddOn
     */
    'common_labels'?: { [key: string]: string; };
    /**
     * 
     * @type {AddOnConfig}
     * @memberof AddOn
     */
    'config'?: AddOnConfig;
    /**
     * List of credentials requests to authenticate operators to access cloud resources.
     * @type {Array<CredentialRequest>}
     * @memberof AddOn
     */
    'credentials_requests'?: Array<CredentialRequest>;
    /**
     * Description of the add-on.
     * @type {string}
     * @memberof AddOn
     */
    'description'?: string;
    /**
     * Link to documentation about the add-on.
     * @type {string}
     * @memberof AddOn
     */
    'docs_link'?: string;
    /**
     * Indicates if this add-on can be added to clusters.
     * @type {boolean}
     * @memberof AddOn
     */
    'enabled'?: boolean;
    /**
     * Indicates if this add-on has external resources associated with it
     * @type {boolean}
     * @memberof AddOn
     */
    'has_external_resources'?: boolean;
    /**
     * Indicates if this add-on is hidden.
     * @type {boolean}
     * @memberof AddOn
     */
    'hidden'?: boolean;
    /**
     * Base64-encoded icon representing an add-on. The icon should be in PNG format.
     * @type {string}
     * @memberof AddOn
     */
    'icon'?: string;
    /**
     * 
     * @type {AddOnInstallMode}
     * @memberof AddOn
     */
    'install_mode'?: AddOnInstallMode;
    /**
     * Label used to attach to a cluster deployment when add-on is installed.
     * @type {string}
     * @memberof AddOn
     */
    'label'?: string;
    /**
     * Indicates if add-on is part of a managed service
     * @type {boolean}
     * @memberof AddOn
     */
    'managed_service'?: boolean;
    /**
     * Name of the add-on.
     * @type {string}
     * @memberof AddOn
     */
    'name'?: string;
    /**
     * Namespaces which are required by this addon.
     * @type {Array<AddOnNamespace>}
     * @memberof AddOn
     */
    'namespaces'?: Array<AddOnNamespace>;
    /**
     * The name of the operator installed by this add-on.
     * @type {string}
     * @memberof AddOn
     */
    'operator_name'?: string;
    /**
     * List of parameters for this add-on.
     * @type {Array<AddOnParameter>}
     * @memberof AddOn
     */
    'parameters'?: Array<AddOnParameter>;
    /**
     * List of requirements for this add-on.
     * @type {Array<AddOnRequirement>}
     * @memberof AddOn
     */
    'requirements'?: Array<AddOnRequirement>;
    /**
     * Used to determine how many units of quota an add-on consumes per resource name.
     * @type {number}
     * @memberof AddOn
     */
    'resource_cost'?: number;
    /**
     * Used to determine from where to reserve quota for this add-on.
     * @type {string}
     * @memberof AddOn
     */
    'resource_name'?: string;
    /**
     * List of sub operators for this add-on.
     * @type {Array<AddOnSubOperator>}
     * @memberof AddOn
     */
    'sub_operators'?: Array<AddOnSubOperator>;
    /**
     * The namespace in which the addon CRD exists.
     * @type {string}
     * @memberof AddOn
     */
    'target_namespace'?: string;
    /**
     * 
     * @type {AddOnVersion}
     * @memberof AddOn
     */
    'version'?: AddOnVersion;
}



