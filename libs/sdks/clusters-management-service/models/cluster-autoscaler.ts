/* tslint:disable */
/* eslint-disable */
/**
 * clusters_mgmt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { AutoscalerResourceLimits } from './autoscaler-resource-limits';
// May contain unused imports in some cases
// @ts-ignore
import { AutoscalerScaleDownConfig } from './autoscaler-scale-down-config';

/**
 * Cluster-wide autoscaling configuration.
 * @export
 * @interface ClusterAutoscaler
 */
export interface ClusterAutoscaler {
    /**
     * Indicates the type of this object. Will be \'ClusterAutoscaler\' if this is a complete object or \'ClusterAutoscalerLink\' if it is just a link.
     * @type {string}
     * @memberof ClusterAutoscaler
     */
    'kind'?: string;
    /**
     * Unique identifier of the object.
     * @type {string}
     * @memberof ClusterAutoscaler
     */
    'id'?: string;
    /**
     * Self link.
     * @type {string}
     * @memberof ClusterAutoscaler
     */
    'href'?: string;
    /**
     * BalanceSimilarNodeGroups enables/disables the `--balance-similar-node-groups` cluster-autoscaler feature. This feature will automatically identify node groups with the same instance type and the same set of labels and try to keep the respective sizes of those node groups balanced.
     * @type {boolean}
     * @memberof ClusterAutoscaler
     */
    'balance_similar_node_groups'?: boolean;
    /**
     * This option specifies labels that cluster autoscaler should ignore when considering node group similarity. For example, if you have nodes with \"topology.ebs.csi.aws.com/zone\" label, you can add name of this label here to prevent cluster autoscaler from splitting nodes into different node groups based on its value.
     * @type {Array<string>}
     * @memberof ClusterAutoscaler
     */
    'balancing_ignored_labels'?: Array<string>;
    /**
     * Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. false by default.
     * @type {boolean}
     * @memberof ClusterAutoscaler
     */
    'ignore_daemonsets_utilization'?: boolean;
    /**
     * Sets the autoscaler log level. Default value is 1, level 4 is recommended for DEBUGGING and level 6 will enable almost everything.
     * @type {number}
     * @memberof ClusterAutoscaler
     */
    'log_verbosity'?: number;
    /**
     * Maximum time CA waits for node to be provisioned.
     * @type {string}
     * @memberof ClusterAutoscaler
     */
    'max_node_provision_time'?: string;
    /**
     * Gives pods graceful termination time before scaling down.
     * @type {number}
     * @memberof ClusterAutoscaler
     */
    'max_pod_grace_period'?: number;
    /**
     * To allow users to schedule \"best-effort\" pods, which shouldn\'t trigger Cluster Autoscaler actions, but only run when there are spare resources available, More info: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption.
     * @type {number}
     * @memberof ClusterAutoscaler
     */
    'pod_priority_threshold'?: number;
    /**
     * 
     * @type {AutoscalerResourceLimits}
     * @memberof ClusterAutoscaler
     */
    'resource_limits'?: AutoscalerResourceLimits;
    /**
     * 
     * @type {AutoscalerScaleDownConfig}
     * @memberof ClusterAutoscaler
     */
    'scale_down'?: AutoscalerScaleDownConfig;
    /**
     * Enables/Disables `--skip-nodes-with-local-storage` CA feature flag. If true cluster autoscaler will never delete nodes with pods with local storage, e.g. EmptyDir or HostPath. true by default at autoscaler.
     * @type {boolean}
     * @memberof ClusterAutoscaler
     */
    'skip_nodes_with_local_storage'?: boolean;
}

