/* tslint:disable */
/* eslint-disable */
/**
 * clusters_mgmt
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ScheduleType } from './schedule-type';
// May contain unused imports in some cases
// @ts-ignore
import { UpgradeType } from './upgrade-type';

/**
 * Representation of an upgrade policy that can be set for a cluster.
 * @export
 * @interface UpgradePolicy
 */
export interface UpgradePolicy {
    /**
     * Indicates the type of this object. Will be \'UpgradePolicy\' if this is a complete object or \'UpgradePolicyLink\' if it is just a link.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'kind'?: string;
    /**
     * Unique identifier of the object.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'id'?: string;
    /**
     * Self link.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'href'?: string;
    /**
     * Cluster ID this upgrade policy is defined for.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'cluster_id'?: string;
    /**
     * Indicates if minor version upgrades are allowed for automatic upgrades (for manual it\'s always allowed).
     * @type {boolean}
     * @memberof UpgradePolicy
     */
    'enable_minor_version_upgrades'?: boolean;
    /**
     * Next time the upgrade should run.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'next_run'?: string;
    /**
     * Schedule cron expression that defines automatic upgrade scheduling.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'schedule'?: string;
    /**
     * 
     * @type {ScheduleType}
     * @memberof UpgradePolicy
     */
    'schedule_type'?: ScheduleType;
    /**
     * 
     * @type {UpgradeType}
     * @memberof UpgradePolicy
     */
    'upgrade_type'?: UpgradeType;
    /**
     * Version is the desired upgrade version.
     * @type {string}
     * @memberof UpgradePolicy
     */
    'version'?: string;
}



